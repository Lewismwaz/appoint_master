# Generated by Django 5.0.1 on 2024-03-19 11:03

import account.models
import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppointmentRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_number', models.CharField(max_length=10, verbose_name='Room Number')),
                ('room_type', models.CharField(choices=[('', '-----'), ('Examination', 'Examination room'), ('Consultation', 'Consultation room'), ('Operating', 'Operating room'), ('Intensive Care', 'Intensive Care Unit (ICU)'), ('Labor and Delivery', 'Labor and Delivery room'), ('Emergency', 'Emergency room'), ('Diagnostic Imaging', 'Diagnostic Imaging room'), ('Pharmacy', 'Pharmacy'), ('Laboratory', 'Laboratory'), ('Recovery', 'Recovery room'), ('Isolation', 'Isolation room'), ('Radiation Therapy', 'Radiation Therapy room'), ('Rehabilitation', 'Rehabilitation room')], max_length=18, verbose_name='Room Type')),
                ('room_location', models.CharField(max_length=100, verbose_name='Room Location')),
            ],
        ),
        migrations.CreateModel(
            name='ID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(max_length=15, unique=True)),
                ('patient_type', models.CharField(choices=[('Student', 'Student'), ('Staff', 'Staff')], max_length=50)),
                ('registered', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_Student_Patient', models.BooleanField(default=False)),
                ('is_Staff_Patient', models.BooleanField(default=False)),
                ('has_next_of_kin', models.BooleanField(default=False)),
                ('is_Doctor', models.BooleanField(default=False)),
                ('specialization', models.CharField(choices=[('', '----------'), ('Dentistry', 'Dentistry'), ('Pharmacy', 'Pharmacy'), ('Laboratory', 'Laboratory Tests'), ('Covid-Screening', 'Covid-19 Screening'), ('Physiotherapy', 'Physiotherapy'), ('Consultation', 'Consultation'), ('VCT', 'HIV Counselling & Treatment'), ('Surgery', 'Surgery'), ('ENT', 'Ear, Nose, and Throat (ENT)'), ('Psychiatry', 'Psychiatry'), ('Flu Treatment', 'Flu Treatment'), ('Mental Health', 'Mental Health')], max_length=15)),
                ('doctor_id', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='Profile-photos/')),
                ('patient_type', models.CharField(choices=[('', '-----'), ('Student', 'Student'), ('Staff', 'Staff')], max_length=50)),
                ('patient_id', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='', max_length=10)),
                ('dob', models.DateField(blank=True, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=13, null=True, region=None, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('appoint_id', models.CharField(default=account.models.generate_appointment_id, editable=False, max_length=6, primary_key=True, serialize=False, verbose_name='Appointment ID')),
                ('appoint_area', models.CharField(choices=[('', '----------'), ('Dentistry', 'Dentistry'), ('Pharmacy', 'Pharmacy'), ('Laboratory', 'Laboratory Tests'), ('Covid-Screening', 'Covid-19 Screening'), ('Physiotherapy', 'Physiotherapy'), ('Consultation', 'Consultation'), ('VCT', 'HIV Counselling & Treatment'), ('Surgery', 'Surgery'), ('ENT', 'Ear, Nose, and Throat (ENT)'), ('Psychiatry', 'Psychiatry'), ('Flu Treatment', 'Flu Treatment'), ('Mental Health', 'Mental Health')], max_length=15, verbose_name='Area')),
                ('appoint_reason', models.CharField(max_length=400, verbose_name='Reason')),
                ('book_time', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Booked on')),
                ('approve_date', models.DateTimeField(blank=True, null=True, verbose_name='Approved on')),
                ('appoint_time', models.DateTimeField(blank=True, null=True, verbose_name='Appointed Date')),
                ('appoint_duration', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(120)], verbose_name='Duration')),
                ('doctor_remarks', models.CharField(blank=True, max_length=100, null=True, verbose_name='Remarks')),
                ('is_resolved', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, null=True, verbose_name='Is resolved')),
                ('close_date', models.DateTimeField(blank=True, null=True, verbose_name='Closed on')),
                ('appoint_status', models.CharField(choices=[('', '-----'), ('Pending', 'Pending'), ('Failed', 'Failed'), ('Scheduled', 'Scheduled'), ('Canceled', 'Canceled'), ('Completed', 'Completed')], max_length=10, verbose_name='Status')),
                ('appointed_doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Doctors', to=settings.AUTH_USER_MODEL)),
                ('appointee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patients', to=settings.AUTH_USER_MODEL)),
                ('appointed_room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.appointmentroom')),
            ],
        ),
        migrations.CreateModel(
            name='NextOfKin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kin_fname', models.CharField(max_length=50)),
                ('kin_lname', models.CharField(max_length=50)),
                ('kin_gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('relationship', models.CharField(choices=[('', '----------'), ('Brother', 'Brother'), ('Sister', 'Sister'), ('Son', 'Son'), ('Daughter', 'Daughter'), ('Mother', 'Mother'), ('Father', 'Father'), ('Aunt', 'Aunt'), ('Uncle', 'Uncle'), ('Niece', 'Niece'), ('Nephew', 'Nephew'), ('Cousin', 'Cousin'), ('Other close Relative', 'Other close Relative'), ('Wife', 'Wife'), ('Husband', 'Husband'), ('Guardian', 'Guardian')], max_length=50)),
                ('kin_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('related_patient', models.ForeignKey(limit_choices_to=models.Q(('is_Student_Patient', True), ('is_Staff_Patient', True), _connector='OR'), on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Related Patient')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='next_of_kin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.nextofkin'),
        ),
    ]
